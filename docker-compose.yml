version: '3.8'

services:
  patients-db:
    image: mongo:latest
    container_name: patients_mongo_db
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - patients_db_data:/data/db
    networks:
      - app-network

  patients-service:
    build:
      context: ./services/patients-service
      dockerfile: Dockerfile
    container_name: patients_service_app
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      MONGO_URI: mongodb://patients-db:27017/patients_db_docker_compose
      PORT: 3001
    depends_on:
      - patients-db
    volumes:
      - ./services/patients-service/src:/app/src
    networks:
      - app-network
    command: npm run dev

  symptoms-db:
    image: mongo:latest
    container_name: symptoms_mongo_db
    restart: unless-stopped
    ports:
      - "27018:27017"
    volumes:
      - symptoms_db_data:/data/db
    networks:
      - app-network

  symptoms-service:
    build:
      context: ./services/symptoms-service
      dockerfile: Dockerfile
    container_name: symptoms_service_app
    restart: unless-stopped
    ports:
      - "3002:3002"
    environment:
      NODE_ENV: development
      MONGO_URI: mongodb://symptoms-db:27017/symptoms_db_docker_compose
      PORT: 3002
    depends_on:
      - symptoms-db
    volumes:
      - ./services/symptoms-service/src:/app/src
    networks:
      - app-network
    command: npm run dev

  api-gateway:
    build:
      context: ./services/api-gateway
      dockerfile: Dockerfile
    container_name: api_gateway_service
    restart: unless-stopped
    ports:
      - "3000:3000"
    networks:
      - app-network
    depends_on:
      - patients-service
      - symptoms-service

  vue-symptom-app:
    build:
      context: ./client/vue-symptom-app
      dockerfile: Dockerfile
      args:
        VITE_API_URL: http://api-gateway:3000
    container_name: vue_symptom_app_client
    ports:
      - "8080:80"
    depends_on:
      - api-gateway
    networks:
      - app-network

volumes:
  patients_db_data:
  symptoms_db_data:

networks:
  app-network:
    driver: bridge